C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE 16X16____
OBJECT MODULE PLACED IN 16X16点阵.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil C51\C51\BIN\C51.EXE 16X16点阵.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*本16*16点阵带字的为上*/
   2          #include<reg52.h>
   3          #define uint    unsigned int
   4          #define u16     unsigned int
   5          #define uchar   unsigned char
   6          #define u8      unsigned char
   7          sbit H_stcp       =   P2^6;   //输出时钟线
   8          sbit H_shcp       =   P2^7;   //HC595芯片输入时钟线
   9          sbit H_ds         =   P2^5;   //数据线
  10            
  11          sbit HC138_A0     =   P2^0;        //
  12          sbit HC138_A1     =   P2^1;        //
  13          sbit HC138_A2     =   P2^2;        //
  14          sbit HC138_A3     =   P2^3;        //
  15          
  16          
  17          #define WORDNUM   40
  18          u16 volatile W_BCNT;    //显示字标志
  19          u8 volatile W_LCNT;   //显示位移标志
  20          u8 speed=5;   //移动速度
  21          
  22          
  23          // 春(0) 风(1) 得(2) 意(3) ，(4) 大(5) 展(6) 宏(7) 图(8) ，(9) 人(10) 杰(11) 地(12) 灵(13) ，(14) 前(15)
  24          // 程(16) 万(17) 里(18) ，(19) 出(20) 类(21) 拔(22) 萃(23) ，(24) 鹏(25) 程(26) 万(27) 里(28) ，(29) 寿(30
             -) 与(31)
  25          // 天(32) 齐(33) ，(34) 缘(35) 定(36) 三(37) 生(38) 。(39)
  26          unsigned char code Word[WORDNUM][32] = {
  27          {
  28          0x02,0x22,0x2A,0x2A,0x2B,0x2B,0x2A,0xFA,0xFE,0x2E,0x2B,0x2B,0x2A,0x2A,0x22,0x02,
  29          0x20,0x20,0x60,0xC0,0xFF,0x7F,0x49,0x49,0x49,0x49,0x7F,0xFF,0xC0,0x60,0x20,0x20,/*"春",0*/
  30          },
  31          
  32          {
  33          0x00,0x00,0x00,0x7F,0x7F,0x4C,0x4F,0x43,0x43,0x47,0x4C,0x48,0x7F,0x7F,0x00,0x00,
  34          0x1F,0x1F,0x0E,0xFC,0xF0,0x0C,0x3C,0xF0,0xF0,0x38,0x0C,0x04,0xF8,0xFE,0x07,0x01,/*"风",1*/
  35          },
  36          
  37          {
  38          0x00,0x01,0x7D,0x7D,0x55,0x55,0x55,0x55,0x7D,0x7D,0xCC,0xEF,0x33,0x19,0x08,0x00,
  39          0x40,0x40,0x40,0xFE,0xFF,0x43,0x42,0x48,0x58,0x50,0x40,0xFF,0xFF,0x80,0xC0,0x40,/*"得",2*/
  40          },
  41          
  42          {
  43          0x08,0x08,0x48,0x4B,0x6B,0x7A,0x5A,0xCA,0xCA,0x5A,0x7A,0x6B,0x4B,0x48,0x08,0x08,
  44          0x06,0x0E,0x08,0xE7,0xE7,0xA1,0xA1,0xAD,0xBD,0xB1,0xA1,0xEF,0xEE,0x0C,0x0E,0x02,/*"意",3*/
  45          },
  46          
  47          {
  48          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  49          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",4*/
  50          },
  51          
  52          {
  53          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,0x04,
  54          0x01,0x01,0x03,0x06,0x0C,0x38,0xF0,0xC0,0xC0,0xF0,0x38,0x0C,0x06,0x03,0x01,0x01,/*"大",5*/
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 2   

  55          },
  56          
  57          {
  58          0x00,0x78,0x79,0x49,0x4F,0x4F,0x49,0x49,0x4F,0x4F,0x49,0x49,0x7F,0x7F,0x00,0x00,
  59          0x22,0x22,0x32,0x3E,0xEC,0xEC,0x38,0x34,0xE6,0xFF,0x3F,0x20,0xF8,0xFE,0x07,0x01,/*"展",6*/
  60          },
  61          
  62          {
  63          0x30,0x3A,0x2A,0x22,0x22,0x22,0x22,0x62,0xEE,0xAF,0x23,0x22,0x22,0x32,0x3A,0x08,
  64          0x00,0x00,0x03,0x07,0x0E,0x0A,0xC2,0xF2,0x3A,0x8F,0xE7,0x72,0x18,0x0C,0x06,0x02,/*"宏",7*/
  65          },
  66          
  67          {
  68          0x00,0x7F,0x7F,0x40,0x48,0x4C,0x4E,0x4B,0x7B,0x7E,0x4C,0x46,0x42,0x7F,0x7F,0x00,
  69          0x00,0xFF,0xFF,0x42,0x42,0xC2,0x96,0xB6,0xAE,0xAA,0xCA,0x42,0x42,0xFF,0xFF,0x00,/*"图",8*/
  70          },
  71          
  72          {
  73          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  74          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",9*/
  75          },
  76          
  77          {
  78          0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
  79          0x01,0x03,0x06,0x0C,0x38,0xF0,0xC0,0x00,0x00,0xC0,0xF0,0x38,0x0C,0x06,0x03,0x01,/*"人",10*/
  80          },
  81          
  82          {
  83          0x00,0x10,0x10,0x11,0x13,0x16,0x1C,0xFF,0xFF,0x1C,0x16,0x13,0x11,0x10,0x10,0x00,
  84          0x40,0x47,0xCF,0x88,0x00,0x06,0x0E,0xE8,0xE6,0x0E,0x08,0x00,0x8C,0xCE,0x43,0x41,/*"杰",11*/
  85          },
  86          
  87          {
  88          0x00,0x0F,0x0F,0x0C,0xFF,0xFF,0x03,0x1F,0x1F,0x05,0x04,0xFF,0xFF,0x04,0x04,0x04,
  89          0x1E,0xDE,0xE2,0x62,0xFA,0xFA,0x02,0xFE,0xFC,0x10,0x10,0xF0,0xF8,0x0C,0x0C,0x08,/*"地",12*/
  90          },
  91          
  92          {
  93          0x00,0x00,0x7F,0x7F,0x49,0x49,0x49,0x49,0x49,0x49,0x49,0x49,0x49,0x41,0x00,0x00,
  94          0x01,0x01,0x03,0x62,0x76,0x1C,0x18,0xF0,0xF0,0x18,0x0C,0x66,0x72,0x13,0x01,0x01,/*"灵",13*/
  95          },
  96          
  97          {
  98          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  99          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",14*/
 100          },
 101          
 102          {
 103          0x10,0x10,0x17,0xD7,0xF0,0x33,0x13,0x10,0x17,0x17,0x74,0xF4,0x97,0x17,0x10,0x10,
 104          0x00,0x00,0xFE,0xFF,0x03,0xF2,0xF0,0x00,0xFE,0xFF,0x93,0x92,0xFF,0xFF,0x00,0x00,/*"前",15*/
 105          },
 106          
 107          {
 108          0x00,0x7C,0x7C,0x44,0x44,0x44,0x44,0x7C,0x7C,0x44,0xC4,0xFF,0x7F,0x25,0x24,0x24,
 109          0x82,0x92,0x92,0x92,0xFE,0xFE,0x92,0x92,0x92,0x62,0xE0,0xFF,0xFF,0xE0,0x70,0x10,/*"程",16*/
 110          },
 111          
 112          {
 113          0x20,0x20,0x20,0x23,0x23,0x22,0x22,0x22,0x22,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 114          0x00,0x00,0x00,0xFC,0xFE,0x03,0x03,0x02,0x00,0x80,0xE0,0x78,0x1C,0x06,0x03,0x01,/*"万",17*/
 115          },
 116          
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 3   

 117          {
 118          0x00,0x00,0x7F,0x7F,0x49,0x49,0x49,0x7F,0x7F,0x49,0x49,0x49,0x7F,0x7F,0x00,0x00,
 119          0x02,0x02,0x22,0x22,0x22,0x22,0x22,0xFE,0xFE,0x22,0x22,0x22,0x22,0x22,0x02,0x02,/*"里",18*/
 120          },
 121          
 122          {
 123          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 124          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",19*/
 125          },
 126          
 127          {
 128          0x00,0x00,0x3F,0x3F,0x02,0x02,0x02,0xFF,0xFF,0x02,0x02,0x02,0x3E,0x3E,0x00,0x00,
 129          0x00,0x3F,0x3F,0x02,0x02,0x02,0x02,0xFE,0xFE,0x02,0x02,0x02,0x02,0x3E,0x3E,0x00,/*"出",20*/
 130          },
 131          
 132          {
 133          0x00,0x08,0x08,0x49,0x6B,0x2E,0x0C,0xFF,0xFF,0x0C,0x2E,0x6B,0x49,0x08,0x08,0x00,
 134          0x21,0x21,0xA3,0xA2,0x26,0x2C,0x38,0x70,0x70,0x38,0x2C,0x26,0xA2,0xA3,0xA1,0x21,/*"类",21*/
 135          },
 136          
 137          {
 138          0x08,0x09,0x69,0xE9,0x89,0xF9,0xFF,0x0F,0x08,0x0A,0x0B,0xFF,0xFF,0x08,0x08,0x08,
 139          0x01,0xC3,0xF6,0x3C,0x3C,0xF6,0xC3,0xF1,0xFD,0x0E,0x02,0xFE,0xFF,0xC3,0x42,0x40,/*"拔",22*/
 140          },
 141          
 142          {
 143          0x20,0x24,0x24,0x24,0xF7,0xF7,0x24,0x2C,0x3C,0x34,0xF7,0xF7,0x24,0x24,0x24,0x20,
 144          0x10,0x10,0x50,0xD0,0x90,0x90,0xD0,0x7F,0x7F,0xD0,0x90,0x90,0xD0,0x50,0x10,0x10,/*"萃",23*/
 145          },
 146          
 147          {
 148          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 149          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",24*/
 150          },
 151          
 152          {
 153          0x00,0x00,0x3F,0x21,0xA4,0x68,0x3F,0x00,0x7F,0x44,0x7F,0x00,0x7F,0x44,0x7F,0x00,
 154          0x00,0x7E,0x41,0x4A,0x48,0x48,0xC8,0x00,0xFF,0x41,0xFC,0x02,0xFD,0x44,0xF8,0x06,/*"鹏",25*/
 155          },
 156          
 157          {
 158          0x00,0x7C,0x7C,0x44,0x44,0x44,0x44,0x7C,0x7C,0x44,0xC4,0xFF,0x7F,0x25,0x24,0x24,
 159          0x82,0x92,0x92,0x92,0xFE,0xFE,0x92,0x92,0x92,0x62,0xE0,0xFF,0xFF,0xE0,0x70,0x10,/*"程",26*/
 160          },
 161          
 162          {
 163          0x20,0x20,0x20,0x23,0x23,0x22,0x22,0x22,0x22,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 164          0x00,0x00,0x00,0xFC,0xFE,0x03,0x03,0x02,0x00,0x80,0xE0,0x78,0x1C,0x06,0x03,0x01,/*"万",27*/
 165          },
 166          
 167          {
 168          0x00,0x00,0x7F,0x7F,0x49,0x49,0x49,0x7F,0x7F,0x49,0x49,0x49,0x7F,0x7F,0x00,0x00,
 169          0x02,0x02,0x22,0x22,0x22,0x22,0x22,0xFE,0xFE,0x22,0x22,0x22,0x22,0x22,0x02,0x02,/*"里",28*/
 170          },
 171          
 172          {
 173          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 174          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",29*/
 175          },
 176          
 177          {
 178          0x02,0x22,0x2A,0x2A,0x2B,0x2B,0x2A,0x2A,0xFA,0xFE,0x2F,0x2B,0x2A,0x2A,0x22,0x02,
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 4   

 179          0x00,0x40,0x40,0x40,0xFE,0xFF,0x43,0x42,0x4C,0x5C,0xD0,0xE0,0x70,0x18,0x0C,0x04,/*"寿",30*/
 180          },
 181          
 182          {
 183          0x00,0x10,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0xF9,0xFF,0x07,0x00,0x00,
 184          0x00,0x00,0xFC,0xFE,0x03,0x13,0x12,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,/*"与",31*/
 185          },
 186          
 187          {
 188          0x02,0x02,0x42,0x42,0x42,0x42,0x42,0x7F,0x7F,0x42,0x42,0x42,0x42,0x42,0x02,0x02,
 189          0x01,0x01,0x03,0x06,0x0C,0x38,0xF0,0xC0,0xC0,0xF0,0x38,0x0C,0x06,0x03,0x01,0x01,/*"天",32*/
 190          },
 191          
 192          {
 193          0x00,0x20,0x21,0x21,0x33,0x3A,0x2E,0x64,0xE4,0xAE,0x3A,0x33,0x21,0x21,0x20,0x00,
 194          0x80,0x80,0x80,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0xF8,0xFE,0x07,0x81,0x80,0x80,/*"齐",33*/
 195          },
 196          
 197          {
 198          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 199          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1E,0x1A,0x00,0x00,/*"，",34*/
 200          },
 201          
 202          {
 203          0x05,0x65,0x7C,0x5C,0x55,0x57,0xD7,0xF5,0x34,0x04,0x0C,0xCE,0xF7,0x3D,0x0C,0x04,
 204          0x08,0xB8,0xF0,0xFE,0xFF,0xDB,0x6E,0xB6,0x92,0x92,0x48,0x48,0x4C,0xE6,0xE6,0x44,/*"缘",35*/
 205          },
 206          
 207          {
 208          0x30,0x38,0x2A,0x22,0x22,0x22,0x22,0x63,0xE3,0xA2,0x22,0x22,0x22,0x32,0x38,0x08,
 209          0x02,0x02,0x22,0x22,0x22,0x22,0x22,0xFE,0xFE,0x02,0x06,0x7C,0x7C,0x06,0x03,0x01,/*"定",36*/
 210          },
 211          
 212          {
 213          0x00,0x20,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x00,
 214          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,/*"三",37*/
 215          },
 216          
 217          {
 218          0x00,0x08,0x08,0x08,0x08,0x08,0x08,0xFF,0xFF,0x08,0x08,0x78,0x7C,0x0E,0x03,0x01,
 219          0x02,0x02,0x42,0x42,0x42,0x42,0x42,0xFE,0xFE,0x42,0x42,0x42,0x42,0x42,0x02,0x02,/*"生",38*/
 220          },
 221          
 222          {
 223          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 224          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0x24,0x3C,0x18,0x00,0x00,/*"。",39*/
 225          },
 226          
 227          };
 228          unsigned char  WordTemp[32] = {
 229          0x01,0x01,0x61,0x71,0x19,0x0D,0x05,0xFF,0xFF,0x01,0x7D,0x7C,0x44,0x47,0x47,0x40,
 230          0x02,0x06,0x0C,0x18,0x70,0xE4,0x86,0xFF,0xFF,0x00,0x7C,0x7E,0x43,0xC3,0xC2,0x00,/*"张",0*/
 231          };
 232          
 233          /*************************/
 234          //延时函数
 235          /*************************/
 236          void delay_ms(uint xms)
 237          {
 238   1          uint i, j;
 239   1          for(i = xms; i > 0; i--) 
 240   1            for(j = 118; j > 0; j--);
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 5   

 241   1      }
 242          
 243          #define HC595_QA  0x80
 244          #define HC595_QB  0x20
 245          #define HC595_QC  0x04
 246          #define HC595_QD  0x01
 247          #define HC595_QE  0x10
 248          #define HC595_QF  0x40
 249          #define HC595_QG  0x02
 250          #define HC595_QH  0x08
 251          void sendbyte_All(u8 group1,u8 group2)      //利用HC595输出
 252          { 
 253   1        u8 z;
 254   1        for(z = 0; z < 8; z++)     //循环8次移入数据
 255   1        { 
 256   2          H_shcp = 0;
 257   2          switch(z)
 258   2          {
 259   3            case 0:H_ds = group2 & HC595_QH;break;
 260   3            case 1:H_ds = group2 & HC595_QG;break;
 261   3            case 2:H_ds = group2 & HC595_QF;break;
 262   3            case 3:H_ds = group2 & HC595_QE;break;
 263   3            case 4:H_ds = group2 & HC595_QD;break;
 264   3            case 5:H_ds = group2 & HC595_QC;break;
 265   3            case 6:H_ds = group2 & HC595_QB;break;
 266   3            case 7:H_ds = group2 & HC595_QA;break;
 267   3          }
 268   2          H_shcp = 1;              //上升沿输入数据
 269   2        }
 270   1        for(z = 0; z < 8; z++)     //循环8次移入数据
 271   1        { 
 272   2          H_shcp = 0;
 273   2          switch(z)
 274   2          {
 275   3            case 0:H_ds = group1 & HC595_QH;break;
 276   3            case 1:H_ds = group1 & HC595_QG;break;
 277   3            case 2:H_ds = group1 & HC595_QF;break;
 278   3            case 3:H_ds = group1 & HC595_QE;break;
 279   3            case 4:H_ds = group1 & HC595_QD;break;
 280   3            case 5:H_ds = group1 & HC595_QC;break;
 281   3            case 6:H_ds = group1 & HC595_QB;break;
 282   3            case 7:H_ds = group1 & HC595_QA;break;
 283   3          }
 284   2          H_shcp = 1;              //上升沿输入数据
 285   2        }
 286   1      
 287   1        H_stcp = 0;
 288   1        H_stcp = 1;                //上升沿使数据并行输出
 289   1      }
 290          void HC138Out(u8 i,u8 l)
 291          {
 292   1        u8 j;
 293   1        switch(i)
 294   1        {
 295   2          case  7:j=5;break;
 296   2          case  6:j=2;break;
 297   2          case  5:j=1;break;
 298   2          case  4:j=7;break;
 299   2          case  3:j=0;break;
 300   2          case  2:j=6;break;
 301   2          case  1:j=4;break;
 302   2          case  0:j=3;break;
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 6   

 303   2        }
 304   1        HC138_A0 = j&0x01;
 305   1        HC138_A1 = j&0x02;
 306   1        HC138_A2 = j&0x04;
 307   1        if(l)
 308   1          HC138_A3=0;
 309   1        else
 310   1          HC138_A3=1;
 311   1      }
 312          
 313          void WordDisplay(u8 *word)
 314          {
 315   1        uchar i;
 316   1        for(i = 0; i < 8; i++)  
 317   1        {  
 318   2          sendbyte_All(0,0); //消影
 319   2          HC138Out(i,0);
 320   2          sendbyte_All(*(word+i),*(word+i+8)); //输出信息
 321   2        }
 322   1        for(i = 0; i < 8; i++)  
 323   1        {  
 324   2          sendbyte_All(0,0); //消影
 325   2          HC138Out(i,1);
 326   2          sendbyte_All(*(word+i+16),*(word+i+24)); //输出信息
 327   2        }
 328   1      }
 329          
 330          /*********************定时器0、定时器1初始化******************/
 331          void time0_init()   
 332          {
 333   1        TMOD = 0x01;                    //设置定时器0为工作模式1 (16-bit)
 334   1        TL0 = 15536;                    //给定时器低位赋初始值    65536-15536=50000us=50ms,即50ms一个中断
 335   1        TH0 = 15536 >> 8;               //给定时器高位赋初始值
 336   1        TR0 = 1;                        //开启定时器0
 337   1        ET0 = 1;                        //允许定时器0中断
 338   1        EA = 1;                         //开启全局中断
 339   1      }
 340          
 341          //按键
 342          sbit Key1=P1^3;        //切换键
 343          sbit Key2=P1^4;        //暂停键
 344          sbit Key3=P3^2;        //加速键
 345          sbit Key4=P3^3;        //减速键
 346          //========================================================================
 347          // 函数: u8 Key_Scan()
 348          // 应用: temp=u8 Key_Scan();
 349          // 描述: 按键扫描并返回按下的键值
 350          // 参数: NONE
 351          // 返回: 按下的键值
 352          // 版本: VER1.0
 353          // 日期: 2015-05-29
 354          // 备注: 该函数带松手检测,按下键返回一次键值后返回0,直至第二次按键按下
 355          //========================================================================
 356          u8 Key_Scan()
 357          {  
 358   1        static u8 key_up=1;//按键按松开标志
 359   1        if(key_up&&(Key1==0||Key2==0||Key3==0||Key4==0))
 360   1        {
 361   2          delay_ms(10);//去抖动 
 362   2          key_up=0;
 363   2          if(Key1==0)     return 1;
 364   2          else if(Key2==0)return 2;
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 7   

 365   2          else if(Key3==0)return 3;
 366   2          else if(Key4==0)return 4;
 367   2        }
 368   1        else if(Key1==1&&Key2==1&&Key3==1&&Key4==1)
 369   1          key_up=1;       
 370   1        return 0;// 无按键按下
 371   1      }
 372          
 373          
 374          void main()
 375          {
 376   1        uchar key_can;   //按键值
 377   1        uchar mode=0;  //模式
 378   1        uchar modej=0;   //模式
 379   1        uchar i;
 380   1        time0_init();
 381   1        while(1) 
 382   1        {
 383   2          key_can=Key_Scan();
 384   2          if(1==key_can)
 385   2          {
 386   3            TR0 = 1;              //开启定时器0
 387   3            if(modej)             //判断暂停标志,此处处理是为了防止暂停再启动方向会变
 388   3            {
 389   4              modej=0;        
 390   4              mode++;
 391   4              if(mode>=2)
 392   4              {
 393   5                mode=0;
 394   5              }
 395   4            }
 396   3            mode++;
 397   3            if(mode>=2)
 398   3            {
 399   4              mode=0;
 400   4            }
 401   3          }
 402   2          if(2==key_can)
 403   2          {
 404   3            TR0 = 0;              //关闭定时器0,暂停
 405   3            modej=1;              //暂停标志
 406   3          }
 407   2          if(4==key_can)
 408   2          {
 409   3            speed+=1;             //速度加1
 410   3          }
 411   2          if(3==key_can)
 412   2          {
 413   3            speed-=1;             //速度减1
 414   3            if(speed==0)
 415   3              speed=1;
 416   3          }
 417   2          if(1==mode)//往右移
 418   2          {
 419   3            for(i = 0; i < 16-W_LCNT; i++)  
 420   3            {
 421   4              WordTemp[i]=Word[W_BCNT][i+W_LCNT];
 422   4            };
 423   3            for(i = 0; i <W_LCNT ; i++)  
 424   3            {
 425   4              WordTemp[i+16-W_LCNT]=Word[W_BCNT+1][i];
 426   4            };
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 8   

 427   3            for(i = 16; i < 32-W_LCNT; i++)  
 428   3            {
 429   4              WordTemp[i]=Word[W_BCNT][i+W_LCNT];
 430   4            };
 431   3            for(i = 16; i <16+W_LCNT ; i++)  
 432   3            {
 433   4              WordTemp[i+16-W_LCNT]=Word[W_BCNT+1][i];
 434   4            };
 435   3          }
 436   2            
 437   2          if(0==mode)//往左移
 438   2          {
 439   3            for(i = 0; i < 16-W_LCNT; i++)  
 440   3            {
 441   4              WordTemp[i+W_LCNT]=Word[W_BCNT][i];
 442   4            };
 443   3            for(i = 0; i < W_LCNT ; i++)  
 444   3            {
 445   4              WordTemp[i]=Word[W_BCNT+1][16-W_LCNT+i];
 446   4            };
 447   3            for(i = 16; i < 32-W_LCNT; i++)  
 448   3            {
 449   4              WordTemp[i+W_LCNT]=Word[W_BCNT][i];
 450   4            };
 451   3            for(i = 16; i <16+W_LCNT ; i++)  
 452   3            {
 453   4              WordTemp[i]=Word[W_BCNT+1][16-W_LCNT+i];
 454   4            };
 455   3          }
 456   2          WordDisplay(WordTemp);
 457   2        }
 458   1      }
 459          
 460          /*********************定时器0中断服务程序************************/
 461          void time0_int() interrupt 1  
 462          {              
 463   1        static uchar volatile value;       //定时10ms中断一次
 464   1        TL0 = 15536;                    //给定时器低位重装初始值    65536-15536=50000us=50ms,即50ms一个中断
 465   1        TH0 = 15536 >> 8;               //给定时器高位重装初始值
 466   1        value ++;
 467   1        if(value >= speed)
 468   1        {
 469   2          value = 0;
 470   2          W_LCNT++;
 471   2          if(W_LCNT >= 16)
 472   2          {
 473   3            W_LCNT=0;
 474   3            W_BCNT++;
 475   3            if(W_BCNT >= (WORDNUM-1))
 476   3            {
 477   4              W_BCNT=0;
 478   4            }
 479   3          }
 480   2          
 481   2        }
 482   1      }
 483          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1266    ----
   CONSTANT SIZE    =   1280    ----
C51 COMPILER V9.52.0.0   16X16____                                                         04/13/2017 21:02:39 PAGE 9   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
