#include "alltestui.h"

alltestui::alltestui(QWidget *parent) :
    QWidget(parent)
{
}

alltestui* alltestui::newinstance()
{
    alltestui *ret = new alltestui();
    if(NULL == ret || !ret->construct())
    {
        delete ret;
        ret = NULL;


    }
    return ret;
}
alltestui::~alltestui()
{}
void alltestui::show()
{
    QWidget::show();

}
bool alltestui::construct()
{
    bool ret = true;
    m_edit = new QLineEdit(this);
    if(m_edit!= NULL)
    {
        m_edit->move(10,10);
        m_edit->resize(240,30);
        m_edit->setReadOnly(true);
    }
    else
    {
        ret = false;
    }
    m_button_clear = new QPushButton(this);
    if(m_button_clear != NULL)
    {
        m_button_clear->move(10,50);
        m_button_clear->resize(40,40);
        m_button_clear->setText("clear");
        connect(m_button_clear,SIGNAL(clicked),this,SLOT(onalltest()));
    }
    else
    {
        ret = false;
    }

    m_button_start = new QPushButton(this);
    if(m_button_start != NULL)
    {
        m_button_start->move(10,50);
        m_button_start->resize(40,40);
        m_button_start->setText("start");
        connect(m_button_start,SIGNAL(clicked),this,SLOT(onalltest()));
    }
    else
    {
        ret = false;
    }
    return ret;
}
void alltestui::onalltest()
{
    QPushButton *button = dynamic_cast<QPushButton*>(sender());
    if(button != NULL)
    {
        QString buttontext = button->text();
        if(buttontext == "clear")
        {
            m_edit->setText("");
        }
        else if(buttontext == "start")
        {
            int fd = ::open("/dev/adc",0);
            if(fd < 0)
            {
                return;
            }
            char buffer[20]="";
            int len = ::read(fd,buffer,(sizeof buffer));
            if(len > 0)
            {
                m_edit->setText(buffer);
            }
            ::close(fd);
        }
    }

}
